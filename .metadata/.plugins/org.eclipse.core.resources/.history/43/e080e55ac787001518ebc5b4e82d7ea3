// Esempio da http://www.crionics.com/products/opensource/faq/swing_ex/SwingExamples.html import java.awt.Component; import java.awt.event.ActionEvent; import java.awt.event.ActionListener; import java.awt.event.WindowAdapter; import java.awt.event.WindowEvent; import javax.swing.DefaultCellEditor; import javax.swing.JButton; import javax.swing.JCheckBox; import javax.swing.JFrame; import javax.swing.JOptionPane; import javax.swing.JScrollPane; import javax.swing.JTable; import javax.swing.UIManager; import javax.swing.table.DefaultTableModel; import javax.swing.table.TableCellRenderer; /**  *version 1.0 11/09/98 * / public class JButtonTableExample estende JFrame {JButtonTableExample pubblico () {super ("JButtonTable esempio");  DefaultTableModel dm = new DefaultTableModel ();  dm.setDataVector (new Object [] [] {{"button 1", "foo"}, {"pulsante 2", "bar"}}, new Object [] {"Button", "Stringa"});  Tavolo JTable = new JTable (dm);  table.getColumn ("Button") .setCellRenderer (nuovo ButtonRenderer ());  table.getColumn ("Button") .setCellEditor (nuovo ButtonEditor (nuovo JCheckBox ()));  JScrollPane scroll = new JScrollPane (tabella);  . getContentPane () aggiungere (scroll);  setSize (400, 100);  setVisible (true);  } Public static void main (String [] args) {JButtonTableExample telaio = new JButtonTableExample ();  frame.addWindowListener (nuovo WindowAdapter () {windowClosing public void (WindowEvent e) {System.exit (0);}});  }} / ** *version 1.0 11/09/98 * / classe ButtonRenderer estende JButton implementa TableCellRenderer {ButtonRenderer pubblico () {setOpaque (true);  } Public Component getTableCellRendererComponent (tabella JTable, Object value, booleano isSelected, hasFocus booleano, int row, int colonna) {if (isSelected) {setForeground (table.getSelectionForeground ());  setBackground (table.getSelectionBackground ());  } Else {setForeground (table.getForeground ());  setBackground (UIManager.getColor ("Button.background"));  } SetText ((valore == null) "":? Value.toString ()); restituire questo;  }} / ** *version 1.0 11/09/98 * / classe ButtonEditor estende DefaultCellEditor {pulsante protetta JButton; String label privato; booleano privato isPushed; ButtonEditor pubblico (JCheckBox checkBox) {super (casella di controllo);  button = new JButton ();  button.setOpaque (true);  button.addActionListener (new ActionListener () {public void actionPerformed (ActionEvent e) {fireEditingStopped ();}});  } Public Component getTableCellEditorComponent (tabella JTable, Object value, booleano isSelected, int row, int colonna) {if (isSelected) {button.setForeground (table.getSelectionForeground ());  button.setBackground (table.getSelectionBackground ());  } Else {button.setForeground (table.getForeground ());  button.setBackground (table.getBackground ());  ?} Label = (valore == null) "": value.toString ();  button.setText (etichetta);  isPushed = true; pulsante di ritorno;  } Public Object getCellEditorValue () {if (isPushed) {// // JOptionPane.showMessageDialog (bottoni, etichette + ": Ahi!"); // System.out.println (etichetta + ":! Ouch");} isPushed = false; return new String (etichetta);  } StopCellEditing public boolean () {isPushed = false; tornare super.stopCellEditing ();  } Protected void fireEditingStopped () {super.fireEditingStopped ();  }} 